package com.examplefg.malwarechecker.Control;

import android.content.Context;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;
import com.examplefg.malwarechecker.Model.Appli;
import com.examplefg.malwarechecker.R;

import butterknife.BindView;
import butterknife.ButterKnife;

public class HistoryViewHolder extends RecyclerView.ViewHolder {

    @BindView(R.id.fragment_history_item_appIcon) ImageView appIcone;
    @BindView(R.id.fragment_history_item_appName) TextView appName;
    @BindView(R.id.fragment_history_item_appPackage) TextView appPackage;
    @BindView(R.id.fragment_history_prediction) ImageView predictionImageView;
    Context context;

    public HistoryViewHolder(@NonNull View itemView, Context context) {
        super(itemView);
        ButterKnife.bind(this,itemView);
        this.context = context;
    }

    public void updateWithApplication(Appli appli)
    {
        //convertir le byte[] en drawable pour afficher l'icone
        appli.byteToDrawable(this.context);

        appName.setText(appli.getLabel());
        appPackage.setText(appli.getPackageName());

        if(appli.getIcone() != null)
        {
            Glide.with(context)
                    .load(appli.getIcone())
                    .circleCrop()
                    .into(appIcone);
            //appIcone.setImageDrawable(appli.getIcone());
        }
        else
        {
            Glide.with(context)
                    .load(R.drawable.unknown_app_icon_resizedd)
                    .circleCrop()
                    .into(appIcone);
            //appIcone.setImageDrawable(context.getResources().getDrawable(R.drawable.unknown_app_icon_resizedd));
        }

        if(appli.isMalware())
        {
            Glide.with(context)
                    .load(R.drawable.result_scan_mlwr)
                    .into(predictionImageView);
        }
        else
        {
            Glide.with(context)
                    .load(R.drawable.result_scan_clean)
                    .into(predictionImageView);
        }
    }
}
